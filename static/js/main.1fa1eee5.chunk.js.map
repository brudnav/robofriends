{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","src","alt","CardList","cardComponent","robots","map","user","SearchBox","searchChange","onChange","type","placeholder","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAoBeA,EAjBF,SAACC,GACb,IACUC,EAAiBD,EAAjBC,KAAKC,EAAYF,EAAZE,MAAMC,EAAMH,EAANG,GAClB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,KACpD,gCACI,6BAAKL,IACL,4BAAIC,WCSLK,EAdE,SAACP,GACjB,IAESQ,EADWR,EAAVS,OACsBC,KAAI,SAACC,GAE9B,OAAO,cAAC,EAAD,CAAMR,GAAIQ,EAAKR,GAAmBF,KAAMU,EAAKV,KAAMC,MAAOS,EAAKT,OAAvCS,EAAKR,OAExC,OACA,8BACKK,KCFMI,EAVG,SAAC,GAClB,IADmBC,EACpB,EADoBA,aAEhB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOU,SAAUD,EAAcT,UAAU,mCAAmCW,KAAK,SAASC,YAAY,qBCMnGC,EAXA,SAAEjB,GAGb,OACI,qBAAKkB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKrB,EAAMsB,YCgEJC,E,kDA7DX,aACC,IAAD,8BACI,gBAsBJC,eAAiB,SAACC,GAEd,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAvBzC,EAAKC,MACL,CACIrB,OAAQ,GACRkB,YAAa,IALrB,E,gEAUC,IAAD,OACII,MAAM,8CACLC,MAAK,SAAAC,GAEC,OAAOA,EAASC,UAElBF,MAAK,SAAAG,GAEE,EAAKT,SAAS,CAACjB,OAAQ0B,S,+BAYtC,IAAD,OACUC,EAAiBC,KAAKP,MAAMrB,OAAO6B,QAAO,SAACC,GAE7C,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAGpE,OAAgC,IAA7BH,KAAKP,MAAMrB,OAAOiC,OAEV,yCAKH,gCACA,6CACA,cAAC,EAAD,CAAW7B,aAAcwB,KAAKb,iBAC9B,cAAC,EAAD,UACG,cAAC,EAAD,CAAUf,OAAQ2B,a,GAlDnBO,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1fa1eee5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Card = (props) => \r\n{\r\n    const {name,email,id} = props;\r\n    return(\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n        \r\n\r\n}\r\n\r\nexport default Card;\r\n\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\n\r\n\r\n\r\nconst CardList = (props) =>\r\n{\r\n    const {robots} = props;\r\n    const cardComponent = robots.map((user) =>\r\n    {\r\n        return <Card id={user.id} key={user.id}  name={user.name} email={user.email} />;\r\n    });\r\n    return(\r\n    <div>\r\n        {cardComponent}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\n\r\nconst SearchBox = ({searchChange}) => \r\n{\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input onChange={searchChange} className=\"pa3 ba b--grenn bg-lightest-blue\" type=\"search\" placeholder=\"search robots\"/>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = ( props ) => \r\n{\r\n   \r\n    return (\r\n        <div style={{overflowY: \"scroll\", border: \"1px solid black\", height: \"500px\"}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\n//import {robots} from \"./robots\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\n\r\n\r\n\r\nclass App extends Component\r\n{\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state = \r\n        {\r\n            robots: [],\r\n            searchfield: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response=>\r\n            {\r\n               return response.json();\r\n            })\r\n            .then(users => \r\n                {\r\n                    this.setState({robots: users});\r\n                })\r\n    }\r\n\r\n\r\n    onSearchChange = (event)=>\r\n    {\r\n        this.setState({searchfield: event.target.value})\r\n        \r\n    }\r\n\r\n    render()\r\n    {\r\n        const filteredRobots = this.state.robots.filter((robot) =>\r\n        {\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n\r\n        if(this.state.robots.length === 0)\r\n        {\r\n            return <h1>Loading</h1>\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <div>\r\n                <h1>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                   <CardList robots={filteredRobots}/> \r\n                </Scroll>\r\n                \r\n                </div>\r\n            ); \r\n        }\r\n\r\n       \r\n    }\r\n\r\n\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./containers/App\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}